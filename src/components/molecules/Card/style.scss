@use '../../_settings/mixins.scss';
@use '../../_settings/functions.scss' as f;
@import '../../_settings/_variables';

$padding_b: 10;
$padding_h: 8;
$gap_v: 14;
$width: 200;
$font_size: 1;

.card {
    display: grid;
    grid-template-rows: auto;
    box-shadow: $shadow-4;
    transition: all 0.5s ease;

    img {
        display: block;
        max-width: 100%;
    }
}

.cardImg {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
}

.cardOverline {
    font-size: 13px;
    color: f.nested-map-get($colors, orange);
}

.cardFooter {
    display: flex;
}

.cardActionWrapper {
    &:not(:first-child) {
        padding-left: 8px;
    }
}

/* Size */
.small {
    font-size: #{$font_size}em;
    row-gap: #{$gap_v}px;
    width: #{$width}px;

    & > section, & > article {
        padding: 0 #{$padding_h}px;

        &:last-child {
            padding-bottom: #{$padding_b}px;
        }
    }
}

.medium {
    font-size: f.increaseTo($font-size, 1.2, 'em');
    row-gap: f.increaseTo($gap_v, 1.5);
    width:  f.increaseTo($width, 1.5);

    & > section, & > article {
        padding: 0 f.increaseTo($padding_h, 1.5);

        &:last-child {
            padding-bottom: f.increaseTo($padding_b, 1.5);
        }
    }
}

.large {
    font-size: f.increaseTo($font-size, 1.4, 'em');
    row-gap: f.increaseTo($gap_v, 2);
    width:  f.increaseTo($width, 2);

    & > section, & > article {
        padding: 0 f.increaseTo($padding_h, 2);

        &:last-child {
            padding-bottom: f.increaseTo($padding_b, 2);
        }
    }
}

/* Types */
.rounded {
    border-radius: 3px;
}

.straight {
    border-radius: 0;
}

/* Theme */
.light {
    background-color: f.nested-map-get($colors, white);
    &:hover {
        box-shadow: $shadow-3;
    }
}

.dark {
    @include mixins.colors('primary_dark') using ($hoverColor) {
        &:hover {
            box-shadow: $shadow-3;
        }
    };
}
